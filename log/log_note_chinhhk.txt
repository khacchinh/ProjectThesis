// hàm xóa bỏ các dấu câu:
    replaceAll("[=^+\\\\|\\[{\\]};:'`\".,<>/#!?()]*", "");

            <h1>{{title}}</h1>
            <nav>
                <a routerLink="/" routerLinkActive="active" class="btn btn-success">Home</a>
                <a routerLink="/wordsegment" routerLinkActive="active" class="btn btn-success">Word Segment</a>
                <a routerLink="/clawer_news" routerLinkActive="active" class="btn btn-success">Clawer News</a>
            </nav>
            <br><br><br>
            <router-outlet></router-outlet>


//home vidu add tasks
            <form action="" class="well" (submit)="addTask($event)">
    <div class="form-group">
        <input type="text" [(ngModel)] = "title" name="title" class="form-control" placeholder="Add Tasks...">
    </div>
</form>

<div class="task-list">
    <div *ngFor = "let task of tasks">
        <div class="col-md-1">
            <input type="checkbox" [checked] = "task.isDone" (click) = updateStatus(task)>
        </div>
        <div class="col-md-7">
            {{task.title}}
        </div>
        <div class="col-md-4">
            <input type="button" (click) = "deleteTask(task._id)" value="Delete" class="btn btn-danger">
        </div>
        <br><br>
    </div>
</div>

data: {
  type: String,
  get: function(data) {
    try { 
      return JSON.parse(data);
    } catch() { 
      return data;
    }
  },
  set: function(data) {
    return JSON.stringify(data);
  }
}
//https://mothereff.in/html-entities


     /*
        var child = require('child_process').spawn(
            'java', ['-jar', 'uetsegmenter.jar', '-r', 'seg', '-m', 'demo', '-i', 'crawler/tokenizer/data/input.txt', '-o','crawler/tokenizer/data/output.txt' ]
        );
        child.stdout.on('data', function(data) {
            console.log(data.toString());
            if (data.toString().length > 30){
                new ProcessSimilarNew();
            }
        });

        child.stderr.on("data", function (data) {
            console.log(data.toString());
        });
        
        //run server test crawler

        app.listen(app.get('port'), function(){
            console.log('Server started on port ' + app.get('port'));
        });
        */


get all item before 2 day
db.newitems.find({"date_public" : {$gte: new Date("date before 2 day")}});
db.newitems.find({""}).sort({date_public: -1}).limit(1)



